name: CI Pipeline(DEV)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image Version Tag'
        required: true
        default: 'v-1'

jobs:
  # STAGE 1: Security Scanning with GitLeaks
  security-scan:
    name: Security Scan
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Run GitLeaks Scan
        uses: gitleaks/gitleaks-action@v2
        with:
          fail_build: true
          verbose: true
  
  # STAGE 2: Build with Maven
  build:
    needs: security-scan
    name: Maven Build
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      
      - name: Build with Maven
        run: mvn clean install
      
      # We need to make the build artifacts available for the next jobs
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: target/*.jar
  
  # STAGE 3: Build Docker Image
  docker-build:
    needs: build
    name: Docker Build
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: app-artifacts
          path: target
      
      - name: Configure Google Cloud Auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
      
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
      
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      
      - name: Build Docker image
        env:
          IMAGE_NAME: "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/pk-docker-repo-dev/app-1"
          IMAGE_TAG: "${{ github.event.inputs.version }}"
        run: |
          echo "Building image: ${IMAGE_NAME}:${IMAGE_TAG}"
          docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
  
  # STAGE 4: Push to Registry
  deploy:
    needs: docker-build
    name: Push to Registry
    runs-on: self-hosted
    steps:
      - name: Configure Google Cloud Auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
      
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
      
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      
      - name: Push Docker image
        env:
          IMAGE_NAME: "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/pk-docker-repo-dev/app-1"
          IMAGE_TAG: "${{ github.event.inputs.version }}"
        run: |
          echo "Pulling image before push: ${IMAGE_NAME}:${IMAGE_TAG}"
          docker pull ${IMAGE_NAME}:${IMAGE_TAG} || echo "Image not found locally, will be built and pushed"
          echo "Pushing image: ${IMAGE_NAME}:${IMAGE_TAG}"
          docker push ${IMAGE_NAME}:${IMAGE_TAG}